/**
 * Total API Reference
 * Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@brand4impact.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PlatformCountry from '../com.brand4impact.client.model/PlatformCountry';
import PlatformCurrency from '../com.brand4impact.client.model/PlatformCurrency';
import PlatformLanguage from '../com.brand4impact.client.model/PlatformLanguage';
import PlatformRole from '../com.brand4impact.client.model/PlatformRole';
import PlatformZone from '../com.brand4impact.client.model/PlatformZone';
import RestError from '../com.brand4impact.client.model/RestError';

/**
* Utils service.
* @module com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi
* @version 0.0.1
*/
export default class UtilsApi {

    /**
    * Constructs a new UtilsApi. 
    * @alias module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi
    * @class
    * @param {module:com.brand4impact.client.invoker/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:com.brand4impact.client.invoker/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCountries operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getCountriesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCountry>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get countries
     * This method returns all the countries available, you can indicate a locale to do the search
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/String} language List of countries
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getCountriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCountry>}
     */
    getCountries(language, callback) {
      let postBody = null;
      // verify the required parameter 'language' is set
      if (language === undefined || language === null) {
        throw new Error("Missing the required parameter 'language' when calling getCountries");
      }

      let pathParams = {
      };
      let queryParams = {
        'language': language
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PlatformCountry];
      return this.apiClient.callApi(
        '/rest/platform/utils/country', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCurrencies operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getCurrenciesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCurrency>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get currencies
     * This method returns all the currencies available, you can indicate a locale to do the search
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/String} language List of currencies
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getCurrenciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCurrency>}
     */
    getCurrencies(language, callback) {
      let postBody = null;
      // verify the required parameter 'language' is set
      if (language === undefined || language === null) {
        throw new Error("Missing the required parameter 'language' when calling getCurrencies");
      }

      let pathParams = {
      };
      let queryParams = {
        'language': language
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PlatformCurrency];
      return this.apiClient.callApi(
        '/rest/platform/utils/currency', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLanguages operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getLanguagesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformLanguage>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get languages
     * This method returns all the languages available, you can indicate a locale to do the search
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/String} language List of languages
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getLanguagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformLanguage>}
     */
    getLanguages(language, callback) {
      let postBody = null;
      // verify the required parameter 'language' is set
      if (language === undefined || language === null) {
        throw new Error("Missing the required parameter 'language' when calling getLanguages");
      }

      let pathParams = {
      };
      let queryParams = {
        'language': language
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PlatformLanguage];
      return this.apiClient.callApi(
        '/rest/platform/utils/language', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRoles operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getRolesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformRole>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get roles
     * This method returns all the roles available, you can indicate a locale to do the search
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getRolesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformRole>}
     */
    getRoles(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PlatformRole];
      return this.apiClient.callApi(
        '/rest/platform/utils/roles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getZones operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getZonesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformZone>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get zones
     * This method returns all the zones available, you can indicate a locale to do the search
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/String} language List of zones
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UtilsApi~getZonesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformZone>}
     */
    getZones(language, callback) {
      let postBody = null;
      // verify the required parameter 'language' is set
      if (language === undefined || language === null) {
        throw new Error("Missing the required parameter 'language' when calling getZones");
      }

      let pathParams = {
      };
      let queryParams = {
        'language': language
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PlatformZone];
      return this.apiClient.callApi(
        '/rest/platform/utils/zone', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
