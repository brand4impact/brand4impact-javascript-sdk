/**
 * Total API Reference
 * Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@brand4impact.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PlatformUser from '../com.brand4impact.client.model/PlatformUser';
import PlatformUserChangePassword from '../com.brand4impact.client.model/PlatformUserChangePassword';
import PlatformUserConfirm from '../com.brand4impact.client.model/PlatformUserConfirm';
import PlatformUserInvite from '../com.brand4impact.client.model/PlatformUserInvite';
import PlatformUserItemWrapper from '../com.brand4impact.client.model/PlatformUserItemWrapper';
import PlatformUserResetPassword from '../com.brand4impact.client.model/PlatformUserResetPassword';
import PlatformUserUpdate from '../com.brand4impact.client.model/PlatformUserUpdate';
import PlatformUserUpdateExt from '../com.brand4impact.client.model/PlatformUserUpdateExt';
import RestError from '../com.brand4impact.client.model/RestError';

/**
* User service.
* @module com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi
* @version 0.0.1
*/
export default class UserApi {

    /**
    * Constructs a new UserApi. 
    * @alias module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi
    * @class
    * @param {module:com.brand4impact.client.invoker/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:com.brand4impact.client.invoker/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the changeUserPassword operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~changeUserPasswordCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Change user's password
     * This method updates the password of a specific user  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {String} token 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUserChangePassword} user 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~changeUserPasswordCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser}
     */
    changeUserPassword(token, user, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling changeUserPassword");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling changeUserPassword");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'user': user
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlatformUser;
      return this.apiClient.callApi(
        '/rest/platform/user/{token}/changepassword', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the confirmUser operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~confirmUserCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activate a user
     * This method activate an invited user in the Company/NGO  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {String} token 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUserConfirm} user 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~confirmUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser}
     */
    confirmUser(token, user, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling confirmUser");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling confirmUser");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'user': user
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlatformUser;
      return this.apiClient.callApi(
        '/rest/platform/user/{token}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUser operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~getUserCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single user
     * This method returns a specific user within your tenant  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {String} token 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~getUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser}
     */
    getUser(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getUser");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlatformUser;
      return this.apiClient.callApi(
        '/rest/platform/user/{token}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUsers operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~getUsersCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUserItemWrapper} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a set of users
     * This method returns a set of users within your tenant    [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)[![pagination](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/brackets.png 'pagination')](http://localhost:8080/backend/blog/home#pagination)
     * @param {Object} opts Optional parameters
     * @param {String} opts.firstnameLike The name of the filter
     * @param {Number} opts.page The number of the page. Possible values: 0 to unlimited
     * @param {Number} opts.size The number of items inside a page. Possible values: 1 to 100
     * @param {String} opts.sort The order direction for sorted results. Possible values: ASC or DESC
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~getUsersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUserItemWrapper}
     */
    getUsers(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'firstnameLike': opts['firstnameLike'],
        'page': opts['page'],
        'size': opts['size'],
        'sort': opts['sort']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlatformUserItemWrapper;
      return this.apiClient.callApi(
        '/rest/platform/user', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the inviteUser operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~inviteUserCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Invite a new user
     * This method invites a user to join a Company/NGO  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUserInvite} user 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~inviteUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser}
     */
    inviteUser(user, callback) {
      let postBody = null;
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling inviteUser");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'user': user
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlatformUser;
      return this.apiClient.callApi(
        '/rest/platform/user/invite', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetUserPassword operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~resetUserPasswordCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset user's password
     * This method reset the password of a specific user by sending an email to the user with a link to reset the password  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUserResetPassword} user 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~resetUserPasswordCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser}
     */
    resetUserPassword(user, callback) {
      let postBody = null;
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling resetUserPassword");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'user': user
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlatformUser;
      return this.apiClient.callApi(
        '/rest/platform/user/resetpassword', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the switchUser operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~switchUserCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Switch user's status
     * This method updates the user status, possible values are: active|inactive  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {String} token 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~switchUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser}
     */
    switchUser(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling switchUser");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlatformUser;
      return this.apiClient.callApi(
        '/rest/platform/user/{token}/switch', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateUser operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~updateUserCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update user data
     * This method updates personal data for a user  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {String} token 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUserUpdate} user 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~updateUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser}
     */
    updateUser(token, user, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling updateUser");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling updateUser");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'user': user
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlatformUser;
      return this.apiClient.callApi(
        '/rest/platform/user/{token}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateUserExt operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~updateUserExtCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update sensitive user data
     * This method updates sensitive user data  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {String} token 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUserUpdateExt} user 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/UserApi~updateUserExtCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformUser}
     */
    updateUserExt(token, user, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling updateUserExt");
      }
      // verify the required parameter 'user' is set
      if (user === undefined || user === null) {
        throw new Error("Missing the required parameter 'user' when calling updateUserExt");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'user': user
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlatformUser;
      return this.apiClient.callApi(
        '/rest/platform/user/{token}/ext', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
