/**
 * Total API Reference
 * Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@brand4impact.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PlatformCampaign from '../com.brand4impact.client.model/PlatformCampaign';
import PlatformCampaignCreate from '../com.brand4impact.client.model/PlatformCampaignCreate';
import PlatformCampaignItemWrapper from '../com.brand4impact.client.model/PlatformCampaignItemWrapper';
import PlatformCampaignUpdate from '../com.brand4impact.client.model/PlatformCampaignUpdate';
import RestError from '../com.brand4impact.client.model/RestError';

/**
* Campaign service.
* @module com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi
* @version 0.0.1
*/
export default class CampaignApi {

    /**
    * Constructs a new CampaignApi. 
    * @alias module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi
    * @class
    * @param {module:com.brand4impact.client.invoker/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:com.brand4impact.client.invoker/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createCampaign operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~createCampaignCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaign} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new campaign
     * This method creates a new campaign within a Company  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaignCreate} campaign 
     * @param {File} primaryImage 
     * @param {File} secondaryImage 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~createCampaignCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaign}
     */
    createCampaign(campaign, primaryImage, secondaryImage, callback) {
      let postBody = null;
      // verify the required parameter 'campaign' is set
      if (campaign === undefined || campaign === null) {
        throw new Error("Missing the required parameter 'campaign' when calling createCampaign");
      }
      // verify the required parameter 'primaryImage' is set
      if (primaryImage === undefined || primaryImage === null) {
        throw new Error("Missing the required parameter 'primaryImage' when calling createCampaign");
      }
      // verify the required parameter 'secondaryImage' is set
      if (secondaryImage === undefined || secondaryImage === null) {
        throw new Error("Missing the required parameter 'secondaryImage' when calling createCampaign");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'campaign': campaign,
        'primaryImage': primaryImage,
        'secondaryImage': secondaryImage
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlatformCampaign;
      return this.apiClient.callApi(
        '/rest/platform/campaign', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCampaign operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~getCampaignCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaign} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single campaign
     * This method returns a specific campaign within your tenant  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {String} token The unique token for the campaign.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~getCampaignCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaign}
     */
    getCampaign(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getCampaign");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlatformCampaign;
      return this.apiClient.callApi(
        '/rest/platform/campaign/{token}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCampaigns operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~getCampaignsCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaignItemWrapper} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a set of campaigns
     * This method returns a set of campaigns within your tenant    [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)[![pagination](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/brackets.png 'pagination')](http://localhost:8080/backend/blog/home#pagination)
     * @param {Object} opts Optional parameters
     * @param {String} opts.titleFilter The name of the filter
     * @param {Number} opts.page The number of the page. Possible values: 0 to unlimited
     * @param {Number} opts.size The number of items inside a page. Possible values: 1 to 100
     * @param {String} opts.sort The order direction for sorted results. Possible values: ASC or DESC
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~getCampaignsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaignItemWrapper}
     */
    getCampaigns(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'titleFilter': opts['titleFilter'],
        'page': opts['page'],
        'size': opts['size'],
        'sort': opts['sort']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlatformCampaignItemWrapper;
      return this.apiClient.callApi(
        '/rest/platform/campaign', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the switchCampaign operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~switchCampaignCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaign} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Switch campaign status
     * This method switch the status of a specific campaign  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {String} token 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~switchCampaignCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaign}
     */
    switchCampaign(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling switchCampaign");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PlatformCampaign;
      return this.apiClient.callApi(
        '/rest/platform/campaign/{token}/switch', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateCampaign operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~updateCampaignCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaign} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a campaign
     * This method updates an existing campaign  [![security](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/shield-check.png 'security')](http://localhost:8080/backend/blog/home#seguridad)[![multi-tenant](https://b4i.ams3.digitaloceanspaces.com/statics/swagger/users.png 'multi-tenant')](http://localhost:8080/backend/blog/home#multitenant)
     * @param {String} token 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaignUpdate} campaign 
     * @param {File} primaryImage 
     * @param {File} secondaryImage 
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/CampaignApi~updateCampaignCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/PlatformCampaign}
     */
    updateCampaign(token, campaign, primaryImage, secondaryImage, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling updateCampaign");
      }
      // verify the required parameter 'campaign' is set
      if (campaign === undefined || campaign === null) {
        throw new Error("Missing the required parameter 'campaign' when calling updateCampaign");
      }
      // verify the required parameter 'primaryImage' is set
      if (primaryImage === undefined || primaryImage === null) {
        throw new Error("Missing the required parameter 'primaryImage' when calling updateCampaign");
      }
      // verify the required parameter 'secondaryImage' is set
      if (secondaryImage === undefined || secondaryImage === null) {
        throw new Error("Missing the required parameter 'secondaryImage' when calling updateCampaign");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'campaign': campaign,
        'primaryImage': primaryImage,
        'secondaryImage': secondaryImage
      };

      let authNames = ['BearerAuthentication'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = PlatformCampaign;
      return this.apiClient.callApi(
        '/rest/platform/campaign/{token}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
