/**
 * Total API Reference
 * Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@brand4impact.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RestError from '../com.brand4impact.client.model/RestError';
import SecurityUser from '../com.brand4impact.client.model/SecurityUser';

/**
* Security service.
* @module com.brand4impact.client.invoker/com.brand4impact.client.api/SecurityApi
* @version 0.0.1
*/
export default class SecurityApi {

    /**
    * Constructs a new SecurityApi. 
    * @alias module:com.brand4impact.client.invoker/com.brand4impact.client.api/SecurityApi
    * @class
    * @param {module:com.brand4impact.client.invoker/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:com.brand4impact.client.invoker/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getJWTToken operation.
     * @callback module:com.brand4impact.client.invoker/com.brand4impact.client.api/SecurityApi~getJWTTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.model/SecurityUser} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get JWT token
     * @param {module:com.brand4impact.client.invoker/com.brand4impact.client.api/SecurityApi~getJWTTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.brand4impact.client.invoker/com.brand4impact.client.model/SecurityUser}
     */
    getJWTToken(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuthentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SecurityUser;
      return this.apiClient.callApi(
        '/security/jwt', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
